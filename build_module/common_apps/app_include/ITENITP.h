/**
 * @file ITENITP.h
 * @brief  Í¼Æ¬Í·?á¹¹Í·?Ä¼?
 * @author <itarge@itarge.com>
 * @version 1.0.0
 * @date 2017-06-02
 */

/* Copyright (C) 2009-2016, Itarge Inc.
 * All right reserved
 *
 */
#ifndef __ITE_NITP_H__
#define __ITE_NITP_H__

#include <ITENetSDK.h>

typedef enum
{
    eNITPVer11 = MAKE_VER(1, 1)                             // 1.01?æ±¾
} ENITPVer;

typedef struct
{
    OS_F32  rgb_mul_rr;                                     // -4.000~4.000
    OS_F32  rgb_mul_gr;                                     // -2.000~2.000
    OS_F32  rgb_mul_br;                                     // -2.000~2.000
    OS_F32  rgb_mul_rg;                                     // -2.000~2.000
    OS_F32  rgb_mul_gg;                                     // -4.000~4.000
    OS_F32  rgb_mul_bg;                                     // -2.000~2.000
    OS_F32  rgb_mul_rb;                                     // -2.000~2.000
    OS_F32  rgb_mul_gb;                                     // -2.000~2.000
    OS_F32  rgb_mul_bb;                                     // -4.000~4.000
    OS_S32    rgb_oft_or;                                   // 0~15
    OS_S32    rgb_oft_og;                                   // 0~15
    OS_S32    rgb_oft_ob;                                   // 0~15
} IPNC_ALG_COLOR_MATRIX;


typedef struct ITE_JPGHeadEx
{
    ENITPVer Ver;                                           // NITPÐ­???æ±¾
    OS_U32 PicLen;                                          // Í¼Æ¬????
    ESnapType SnapType;                                     // ????????
    OS_U32 Context;                                         // ?í´¥????????(IO??????Ð§)
    union
    {
        struct timeval Exp_Timeval;                         // linux timeval
    } ExpTime;                                              // ?Ø¹?Ê±??
    OS_U32 RedLampTime;                                     // ???Æµ??Áº?Ê±??
    OS_S32 SnapIndex;                                       // ×¥??????
    OS_U8 Suffix[4];                                        // ?Ä¼?????×º

    EDriveWay DriveWay;                                     // ??????Ï¢
    OS_S32 TriIndex;                                        // ??????????
    OS_S32 nSpeed;                                          // ?Ù¶?
    OS_S32 nSpeedMax;                                       // ????
    OS_S32 nCoilTime;                                       // ??È¦Ê±????(??Î»:ms)
    OS_S32 nCoilDis;                                        // ??È¦???ë£¨??Î»:cm??
    OS_U8 cCarMum[16];                                      // ???Æº???
    struct timeval Red_Timeval;                             // linux timeval ???Æ¿?Ê¼Ê±??

} ITE_JPGHeadEx, *PITE_JPGHeadEx;

typedef struct
{
    OS_U8 header[4];                                        // À©Õ¹Í·????Ö¾?Í³???
    OS_U8 company[8];                                       // ??Ë¾????
    ITE_JPGHeadEx JPGHeadEx;
} EXT_JFIF_SNAP;                                            // ×¥??Í¼Æ¬Í·??À©Õ¹?á¹¹

#define EXT_JFIF_SNAP_LEN_1     46
#define EXT_JFIF_SNAP_LEN_2     (sizeof(EXT_JFIF_SNAP) - 2)

#define EXT_JFIF_SNAP_LEN_3     90
typedef struct ITE_StreamHeadEx
{
    ENITPVer Ver;                                           // NITPÐ­???æ±¾
    OS_U32 PicLen;                                          // Í¼Æ¬????
    EStreamPicType PicType;                                 // Í¼Æ¬????
    union
    {
        struct timeval Exp_Timeval;                         // linux timeval
    } ExpTime;                                              // ?Ø¹?Ê±??

    OS_U8 ICCardID[8];                                      // ????Ð¾Æ¬ID
    OS_U32 picIndex;                                        // Í¼Æ¬???Å£?Ñ­??Ê¹?Ã£?
} ITE_StreamHeadEx, *PITE_StreamHeadEx;

typedef struct
{
    OS_U8 header[4];
    OS_U8 company[8];
    ITE_StreamHeadEx StreamHeadEx;
} EXT_JFIF_STREAM;                                          // ×¥??Í¼Æ¬Í·??À©Õ¹?á¹¹

// À©Õ¹Í·2
typedef struct
{
    OS_U8 header[4];                                        // [0] 0xFF [1] 0xE2 [2-3] À©Õ¹??Ï¢???? ??4?Ö½?
    OS_U8 company[8];                                       // "itarge" ??8?Ö½?

    OS_U8 cameraType[32];                                   // ???????Íº? ??32?Ö½?
    OS_U8 szIP[16];                                         // IP??Ö· ??16?Ö½?
    OS_U8 sensorType[32];                                   // ???????Íº? ??32?Ö½?
    OS_S32 expTime;                                         // ???? ??4?Ö½?
    OS_S32 gain;                                            // ???? ??4?Ö½?
    OS_S32 brightness;                                      // ?Á¶? ??4?Ö½?
    OS_S32 contrast;                                        // ?Ô±È¶? ??4?Ö½?
    OS_S32 sharpness;                                       // ???? ??4?Ö½?
    OS_S32 saturation;                                      // ???Í¶? ??4?Ö½? Î´Êµ?Ö£??Ý²???Ê¾
    OS_S32 redGain;                                         // ??É«???? ??4?Ö½?
    OS_S32 greenGain;                                       // ??É«???? ??4?Ö½?
    OS_S32 blueGain;                                        // À¶É«???? ??4?Ö½?
    OS_S32 ecompensation;                                   // ?Ø¹â²¹?? ??4?Ö½?
    OS_S32 jpegquality;                                     // Í¼Æ¬??Á¿ ??4?Ö½?
    OS_S32 flashType;                                       // 01??LED 02???????? ??4?Ö½?
    OS_S32 triggerType;                                     // Í¼Æ¬???? 0?í´¥?? / 1???? / 2???? / 3 RS485 / 4 ?×´? / 5???? / 6??Í¼Æ¬ ??4?Ö½?
    OS_S32 gamma;                                           // gamma ??4?Ö½?
    OS_S32 level;                                           // ?Úµ?Æ½ ??4?Ö½?
    OS_S16 width;                                           // Í¼????
    OS_S16 height;                                          // Í¼????
    OS_U8 firmware_version[16];                             // ?Ì¼??????æ±¾
    OS_U8 sn_no[20];                                        // SN???? 1????ÒªÍ¨?????????????Ã£?2??????Ç°?????Ü¹Ì»?flash???â£¬?ý¼¶²»»?????Ó°?ì¡£
    OS_S32 day_night;                                       // ??????????
    OS_S32 td1;                                             // ×¥????Ê±(??Î»us)
    OS_S32 td2;                                             // ?Ø¹???Ê±(??Î»us)
    OS_S32 yavg;                                            // Æ½???Á¶?
    OS_S32 st_usr_param;                                    // ?í´¥???Ã»?????(×¥??Ê±????????)
    OS_F32 fsaturationNo;                                   // ?????Í¶?
    OS_S32 nNotifyACorDC;                                   // ??Ç°?Ãµ? 0:Ö±?? 1:???? 2:?????ì³£
    OS_U16 nArm_Hz;                                         // arm ??Æµ??
    OS_U16 nDdr_Hz;                                         // DDR??Æµ??
    OS_S32 nCam_Temperature;                                // ?????Â¶È¼Ä´?????Öµ
    OS_U8 szColor[8];                                       // ??????É«
    OS_S32 nReliability;                                    // ???Å¶?
    OS_S32 nSnapIndex;                                      // ×¥??Í¼Æ¬????
    OS_U8 szReserve[4];                                     // ?????Â¼???
    OS_S32 picflage;                                        // Í¼Æ¬??Ö¾??????Î»Îª??1??Ê¾?Ã±?Ö¾??????Ð§??0??Ê¾??Ð§
    // ????Ò»Î»Îª1????SD???Ï´?Í¼Æ¬??0??Îª??Ê¹×¥???Ï´?Í¼Æ¬??????Î»??Ê±Î´?Ã¡?
    OS_S32 rev[18];                                         // ????????
    OS_U8 szSDKVer[16];                                     // SDK?æ±¾

} EXT_JFIF2;                                                // JFIFÍ·??À©Õ¹E2?á¹¹

#endif // __ITE_NITP_H__
